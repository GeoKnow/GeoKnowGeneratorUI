/* CVS $Id: $ */
package com.ontos.ldiw.vocabulary; 
import com.hp.hpl.jena.rdf.model.*;
 
/**
 * Vocabulary definitions from file:/Users/alejandragarciarojas/Developments/GeoKnow/GeoKnowGeneratorUI/src/main/vocabs/sparql-service-description.ttl 
 * @author Auto-generated by schemagen on 27 Apr 2015 13:06 
 */
public class SD {
    /** <p>The RDF model that holds the vocabulary terms</p> */
    private static Model m_model = ModelFactory.createDefaultModel();
    
    /** <p>The namespace of the vocabulary as a string</p> */
    public static final String NS = "http://www.w3.org/ns/sparql-service-description#";
    
    /** <p>The namespace of the vocabulary as a string</p>
     *  @see #NS */
    public static String getURI() {return NS;}
    
    /** <p>The namespace of the vocabulary as a resource</p> */
    public static final Resource NAMESPACE = m_model.createResource( NS );
    
    /** <p>Relates an instance of sd:Service to a description of the graphs which are 
     *  allowed in the construction of a dataset either via the SPARQL Protocol, with 
     *  FROM/FROM NAMED clauses in a query, or with USING/USING NAMED in an update 
     *  request, if the service limits the scope of dataset construction.</p>
     */
    public static final Property availableGraphs = m_model.createProperty( "http://www.w3.org/ns/sparql-service-description#availableGraphs" );
    
    /** <p>Relates an instance of sd:Service to a description of the default dataset 
     *  available when no explicit dataset is specified in the query, update request 
     *  or via protocol parameters.</p>
     */
    public static final Property defaultDataset = m_model.createProperty( "http://www.w3.org/ns/sparql-service-description#defaultDataset" );
    
    /** <p>Relates an instance of sd:Service with a resource representing an entailment 
     *  regime used for basic graph pattern matching. This property is intended for 
     *  use when a single entailment regime by default applies to all graphs in the 
     *  default dataset of the service. In situations where a different entailment 
     *  regime applies to a specific graph in the dataset, the sd:entailmentRegime 
     *  property should be used to indicate this fact in the description of that graph.</p>
     */
    public static final Property defaultEntailmentRegime = m_model.createProperty( "http://www.w3.org/ns/sparql-service-description#defaultEntailmentRegime" );
    
    /** <p>Relates an instance of sd:Dataset to the description of its default graph.</p> */
    public static final Property defaultGraph = m_model.createProperty( "http://www.w3.org/ns/sparql-service-description#defaultGraph" );
    
    /** <p>Relates an instance of sd:Service with a resource representing a supported 
     *  profile of the default entailment regime (as declared by sd:defaultEntailmentRegime).</p>
     */
    public static final Property defaultSupportedEntailmentProfile = m_model.createProperty( "http://www.w3.org/ns/sparql-service-description#defaultSupportedEntailmentProfile" );
    
    /** <p>The SPARQL endpoint of an sd:Service that implements the SPARQL Protocol service. 
     *  The object of the sd:endpoint property is an IRI.</p>
     */
    public static final Property endpoint = m_model.createProperty( "http://www.w3.org/ns/sparql-service-description#endpoint" );
    
    /** <p>Relates a named graph description with a resource representing an entailment 
     *  regime used for basic graph pattern matching over that graph.</p>
     */
    public static final Property entailmentRegime = m_model.createProperty( "http://www.w3.org/ns/sparql-service-description#entailmentRegime" );
    
    /** <p>Relates an instance of sd:Service to an aggregate that may be used in a SPARQL 
     *  aggregate query (for instance in a HAVING clause or SELECT expression) besides 
     *  the standard list of supported aggregates COUNT, SUM, MIN, MAX, AVG, GROUP_CONCAT, 
     *  and SAMPLE</p>
     */
    public static final Property extensionAggregate = m_model.createProperty( "http://www.w3.org/ns/sparql-service-description#extensionAggregate" );
    
    /** <p>Relates an instance of sd:Service to a function that may be used in a SPARQL 
     *  SELECT expression or a FILTER, HAVING, GROUP BY, ORDER BY, or BIND clause.</p>
     */
    public static final Property extensionFunction = m_model.createProperty( "http://www.w3.org/ns/sparql-service-description#extensionFunction" );
    
    /** <p>Relates an instance of sd:Service with a resource representing a supported 
     *  feature.</p>
     */
    public static final Property feature = m_model.createProperty( "http://www.w3.org/ns/sparql-service-description#feature" );
    
    /** <p>Relates a named graph to its graph description.</p> */
    public static final Property graph = m_model.createProperty( "http://www.w3.org/ns/sparql-service-description#graph" );
    
    /** <p>Relates an instance of sd:Service to a format that is supported for parsing 
     *  RDF input; for example, via a SPARQL 1.1 Update LOAD statement, or when URIs 
     *  are dereferenced in FROM/FROM NAMED/USING/USING NAMED clauses.</p>
     */
    public static final Property inputFormat = m_model.createProperty( "http://www.w3.org/ns/sparql-service-description#inputFormat" );
    
    /** <p>Relates an instance of sd:Service to a resource representing an implemented 
     *  extension to the SPARQL Query or Update language.</p>
     */
    public static final Property languageExtension = m_model.createProperty( "http://www.w3.org/ns/sparql-service-description#languageExtension" );
    
    /** <p>Relates a named graph to the name by which it may be referenced in a FROM/FROM 
     *  NAMED clause. The object of the sd:name property is an IRI.</p>
     */
    public static final Property name = m_model.createProperty( "http://www.w3.org/ns/sparql-service-description#name" );
    
    /** <p>Relates an instance of sd:GraphCollection (or its subclass sd:Dataset) to 
     *  the description of one of its named graphs. The description of such a named 
     *  graph MUST include the sd:name property and MAY include the sd:graph property.</p>
     */
    public static final Property namedGraph = m_model.createProperty( "http://www.w3.org/ns/sparql-service-description#namedGraph" );
    
    /** <p>Relates an instance of sd:Service to a resource representing an implemented 
     *  feature that extends the SPARQL Query or Update language and that is accessed 
     *  by using the named property.</p>
     */
    public static final Property propertyFeature = m_model.createProperty( "http://www.w3.org/ns/sparql-service-description#propertyFeature" );
    
    /** <p>Relates an instance of sd:Service to a format that is supported for serializing 
     *  query results.</p>
     */
    public static final Property resultFormat = m_model.createProperty( "http://www.w3.org/ns/sparql-service-description#resultFormat" );
    
    /** <p>Relates a named graph description with a resource representing a supported 
     *  profile of the entailment regime (as declared by sd:entailmentRegime) used 
     *  for basic graph pattern matching over that graph.</p>
     */
    public static final Property supportedEntailmentProfile = m_model.createProperty( "http://www.w3.org/ns/sparql-service-description#supportedEntailmentProfile" );
    
    /** <p>Relates an instance of sd:Service to a SPARQL language (e.g. Query and Update) 
     *  that it implements.</p>
     */
    public static final Property supportedLanguage = m_model.createProperty( "http://www.w3.org/ns/sparql-service-description#supportedLanguage" );
    
    /** <p>sd:BasicFederatedQuery, when used as the object of the sd:feature property, 
     *  indicates that the SPARQL service supports basic federated query using the 
     *  SERVICE keyword as defined by SPARQL 1.1 Federation Extensions.</p>
     */
    public static final Resource BasicFederatedQuery = m_model.createResource( "http://www.w3.org/ns/sparql-service-description#BasicFederatedQuery" );
    
    /** <p>sd:DereferencesURIs, when used as the object of the sd:feature property, indicates 
     *  that a SPARQL service will dereference URIs used in FROM/FROM NAMED and USING/USING 
     *  NAMED clauses and use the resulting RDF in the dataset during query evaluation.</p>
     */
    public static final Resource DereferencesURIs = m_model.createResource( "http://www.w3.org/ns/sparql-service-description#DereferencesURIs" );
    
    /** <p>sd:EmptyGraphs, when used as the object of the sd:feature property, indicates 
     *  that the underlying graph store supports empty graphs. A graph store that 
     *  supports empty graphs MUST NOT remove graphs that are left empty after triples 
     *  are removed from them.</p>
     */
    public static final Resource EmptyGraphs = m_model.createResource( "http://www.w3.org/ns/sparql-service-description#EmptyGraphs" );
    
    /** <p>sd:RequiresDataset, when used as the object of the sd:feature property, indicates 
     *  that the SPARQL service requires an explicit dataset declaration (based on 
     *  either FROM/FROM NAMED clauses in a query, USING/USING NAMED clauses in an 
     *  update, or the appropriate SPARQL Protocol parameters).</p>
     */
    public static final Resource RequiresDataset = m_model.createResource( "http://www.w3.org/ns/sparql-service-description#RequiresDataset" );
    
    /** <p>sd:SPARQL10Query is an sd:Language representing the SPARQL 1.0 Query language.</p> */
    public static final Resource SPARQL10Query = m_model.createResource( "http://www.w3.org/ns/sparql-service-description#SPARQL10Query" );
    
    /** <p>sd:SPARQL11Query is an sd:Language representing the SPARQL 1.1 Query language.</p> */
    public static final Resource SPARQL11Query = m_model.createResource( "http://www.w3.org/ns/sparql-service-description#SPARQL11Query" );
    
    /** <p>sd:SPARQLUpdate is an sd:Language representing the SPARQL 1.1 Update language.</p> */
    public static final Resource SPARQL11Update = m_model.createResource( "http://www.w3.org/ns/sparql-service-description#SPARQL11Update" );
    
    /** <p>sd:UnionDefaultGraph, when used as the object of the sd:feature property, 
     *  indicates that the default graph of the dataset used during query and update 
     *  evaluation (when an explicit dataset is not specified) is comprised of the 
     *  union of all the named graphs in that dataset.</p>
     */
    public static final Resource UnionDefaultGraph = m_model.createResource( "http://www.w3.org/ns/sparql-service-description#UnionDefaultGraph" );
    
}
