/* CVS $Id: $ */
package com.ontos.ldiw.vocabulary; 
import com.hp.hpl.jena.rdf.model.*;
import java.io.ByteArrayInputStream;
 
/**
 * Vocabulary definitions from acl.rdf 
 * @author Auto-generated by schemagen on 03 Jun 2015 12:20 
 */
public class ACL {
    /** <p>The RDF model that holds the vocabulary terms</p> */
    private static Model m_model = ModelFactory.createDefaultModel();
    
    private static final String SOURCE = 
           "@prefix :      <http://www.w3.org/ns/auth/acl#> .        \n"
         + "@prefix owl:   <http://www.w3.org/2002/07/owl#> .        \n"
         + "@prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .        \n"
         + "@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .        \n"
         + "@prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#> .        \n"
         + "@prefix dc:    <http://purl.org/dc/elements/1.1/> .        \n"
         + ":Authorization  a     rdfs:Class ;        \n"
         + "        rdfs:comment  \"An element of access control,\\n    allowing agent to agents access of some kind to resources or classes of resources\" ;        \n"
         + "        rdfs:label    \"authorization\" .        \n"
         + "<file:///Users/alejandragarciarojas/Developments/GeoKnow/GeoKnowGeneratorUI/src/main/vocabs/acl.rdf>        \n"
         + "        rdfs:comment  \"Defines the element of Authorization and its essential properties,\\n    and also some classes of access such as read and write. \" ;        \n"
         + "        dc:title      \"Basic Access Control ontology\" .        \n"
         + ":Append  a               rdfs:Class ;        \n"
         + "        rdfs:comment     \"Append accesses are specific write access which only add information, and do not remove information.\\n    For text files, for example, append access allows bytes to be added onto the end of the file.\\n    For RDF graphs, Append access allows adds triples to the graph but does not remove any.\\n    Append access is useful for dropbox functionality.\\n    Dropbox can be used for link notification, which the information added is a notification\\n    that a some link has been made elsewhere relevant to the given resource.\\n    \" ;        \n"
         + "        rdfs:label       \"append\"@en ;        \n"
         + "        rdfs:subClassOf  :Write , :Access .        \n"
         + ":defaultForNew  a     rdf:Property ;        \n"
         + "        rdfs:comment  \"A directory for which this authorization is used for new files in the directory.\" ;        \n"
         + "        rdfs:domain   :Authorization ;        \n"
         + "        rdfs:label    \"default access for new things in\" .        \n"
         + ":Write  a                rdfs:Class ;        \n"
         + "        rdfs:label       \"write\"@en ;        \n"
         + "        rdfs:subClassOf  :Access .        \n"
         + ":Read   a                rdfs:Class ;        \n"
         + "        rdfs:comment     \"The class of read operations\" ;        \n"
         + "        rdfs:label       \"read\"@en ;        \n"
         + "        rdfs:subClassOf  :Access .        \n"
         + ":agentClass  a        rdf:Property ;        \n"
         + "        rdfs:comment  \"A class of persons or social entities to being given the right\" ;        \n"
         + "        rdfs:domain   :Authorization ;        \n"
         + "        rdfs:label    \"agent class\" ;        \n"
         + "        rdfs:range    rdfs:Class .        \n"
         + ":accessTo  a          rdf:Property ;        \n"
         + "        rdfs:comment  \"The information resource to which access is being granted.\" ;        \n"
         + "        rdfs:domain   :Authorization ;        \n"
         + "        rdfs:label    \"to\" ;        \n"
         + "        rdfs:range    <http://www.w3.org/2006/gen/ont#InformationResource> .        \n"
         + ":delegates  a         rdf:Property ;        \n"
         + "        rdfs:comment  \"Delegates a person or another agent to act on behalf of the user.\\n    For example, Alice delegates Bob to act on behalf of Alice for ACL purposes.\" ;        \n"
         + "        rdfs:label    \"delegates\"@en ;        \n"
         + "        rdfs:range    <http://xmlns.com/foaf/0.1/Agent> .        \n"
         + ":Control  a              rdfs:Class ;        \n"
         + "        rdfs:comment     \"Allows read/write access to the ACL for the resource(s)\" ;        \n"
         + "        rdfs:label       \"control\"@en ;        \n"
         + "        rdfs:subClassOf  :Access .        \n"
         + ":mode   a             rdf:Property ;        \n"
         + "        rdfs:comment  \"A mode of access such as read or write.\" ;        \n"
         + "        rdfs:domain   :Authorization ;        \n"
         + "        rdfs:label    \"access mode\" ;        \n"
         + "        rdfs:range    rdfs:Class .        \n"
         + ":owner  a             rdf:Property ;        \n"
         + "        rdfs:comment  \"The person or other agent which owns this. \\n    For example, the owner of a file in a filesystem.\\n    There is a sense of right to control.   Typically defaults to the agent who created\\n    something but can be changed.\" ;        \n"
         + "        rdfs:label    \"owner\"@en ;        \n"
         + "        rdfs:range    <http://xmlns.com/foaf/0.1/Agent> .        \n"
         + ":accessControl  a           rdf:Property ;        \n"
         + "        rdfs:comment        \"The Access Control file for this information resource.\\n        This may of course be a virtual resorce implemented by the access control system.\\n        Note also HTTP's header  Link:  foo.meta ;rel=meta can be used for this.\" ;        \n"
         + "        rdfs:domain         <http://www.w3.org/2006/gen/ont#InformationResource> ;        \n"
         + "        rdfs:label          \"access control\" ;        \n"
         + "        rdfs:range          <http://www.w3.org/2006/gen/ont#InformationResource> ;        \n"
         + "        rdfs:subPropertyOf  rdfs:seeAlso .        \n"
         + ":accessToClass  a     rdf:Property ;        \n"
         + "        rdfs:comment  \"A class of information resources to which access is being granted.\" ;        \n"
         + "        rdfs:domain   :Authorization ;        \n"
         + "        rdfs:label    \"to all in\" ;        \n"
         + "        rdfs:range    rdfs:Class .        \n"
         + ":Access  a            rdfs:Class ;        \n"
         + "        rdfs:comment  \"Any kind of access to a resource. Don't use this, use R W and RW\" ;        \n"
         + "        :label        \"access\"@en .        \n"
         + ":agent  a             rdf:Property ;        \n"
         + "        rdfs:comment  \"A person or social entity to being given the right\" ;        \n"
         + "        rdfs:domain   :Authorization ;        \n"
         + "        rdfs:label    \"agent\" ;        \n"
         + "        rdfs:range    <http://xmlns.com/foaf/0.1/Agent> .        \n"
    ;

    /** Read the ontology definition into the source model */ 
    static { 
        m_model.read( new ByteArrayInputStream( SOURCE.getBytes() ), null, "N3" );
    }

    /** <p>The namespace of the vocabulary as a string</p> */
    public static final String NS = "http://www.w3.org/ns/auth/acl#";
    
    /** <p>The namespace of the vocabulary as a string</p>
     *  @see #NS */
    public static String getURI() {return NS;}
    
    /** <p>The namespace of the vocabulary as a resource</p> */
    public static final Resource NAMESPACE = m_model.createResource( NS );
    

    public static Model getModel() {return m_model;}

    /** <p>The Access Control file for this information resource. This may of course 
     *  be a virtual resorce implemented by the access control system. Note also HTTP's 
     *  header Link: foo.meta ;rel=meta can be used for this.</p>
     */
    public static final Property accessControl = m_model.createProperty( "http://www.w3.org/ns/auth/acl#accessControl" );
    
    /** <p>The information resource to which access is being granted.</p> */
    public static final Property accessTo = m_model.createProperty( "http://www.w3.org/ns/auth/acl#accessTo" );
    
    /** <p>A class of information resources to which access is being granted.</p> */
    public static final Property accessToClass = m_model.createProperty( "http://www.w3.org/ns/auth/acl#accessToClass" );
    
    /** <p>A person or social entity to being given the right</p> */
    public static final Property agent = m_model.createProperty( "http://www.w3.org/ns/auth/acl#agent" );
    
    /** <p>A class of persons or social entities to being given the right</p> */
    public static final Property agentClass = m_model.createProperty( "http://www.w3.org/ns/auth/acl#agentClass" );
    
    /** <p>A directory for which this authorization is used for new files in the directory.</p> */
    public static final Property defaultForNew = m_model.createProperty( "http://www.w3.org/ns/auth/acl#defaultForNew" );
    
    /** <p>Delegates a person or another agent to act on behalf of the user. For example, 
     *  Alice delegates Bob to act on behalf of Alice for ACL purposes.</p>
     */
    public static final Property delegates = m_model.createProperty( "http://www.w3.org/ns/auth/acl#delegates" );
    
    /** <p>A mode of access such as read or write.</p> */
    public static final Property mode = m_model.createProperty( "http://www.w3.org/ns/auth/acl#mode" );
    
    /** <p>The person or other agent which owns this. For example, the owner of a file 
     *  in a filesystem. There is a sense of right to control. Typically defaults 
     *  to the agent who created something but can be changed.</p>
     */
    public static final Property owner = m_model.createProperty( "http://www.w3.org/ns/auth/acl#owner" );
    
}
