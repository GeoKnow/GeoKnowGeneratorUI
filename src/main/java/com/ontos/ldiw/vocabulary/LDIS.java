/* CVS $Id: $ */
package com.ontos.ldiw.vocabulary;

import com.hp.hpl.jena.rdf.model.Model;
import com.hp.hpl.jena.rdf.model.ModelFactory;
import com.hp.hpl.jena.rdf.model.Property;
import com.hp.hpl.jena.rdf.model.Resource;

/**
 * Vocabulary definitions from ldsi-schema.ttl
 * 
 * @author Auto-generated by schemagen on 02 Sep 2014 10:30
 */
public class LDIS {
    /**
     * <p>
     * The RDF model that holds the vocabulary terms
     * </p>
     */
    private static Model m_model = ModelFactory.createDefaultModel();

    /**
     * <p>
     * The namespace of the vocabulary as a string
     * </p>
     */
    public static final String NS = "http://stack.linkeddata.org/ldis-schema/";

    /**
     * <p>
     * The namespace of the vocabulary as a string
     * </p>
     * 
     * @see #NS
     */
    public static String getURI() {
	return NS;
    }

    /**
     * <p>
     * The namespace of the vocabulary as a resource
     * </p>
     */
    public static final Resource NAMESPACE = m_model.createResource(NS);

    /**
     * <p>
     * The ontology's owl:versionInfo as a string
     * </p>
     */
    public static final String VERSION_INFO = "0.1.0";

    public static final Property integrates = m_model
	    .createProperty("http://stack.linkeddata.org/ldis-schema/integrates");

    public static final Property password = m_model
	    .createProperty("http://stack.linkeddata.org/ldis-schema/password");

    /**
     * <p>
     * A component in the stack provides a service of a givent type
     * </p>
     */
    public static final Property providesService = m_model
	    .createProperty("http://stack.linkeddata.org/ldis-schema/providesService");

    public static final Property serviceUrl = m_model
	    .createProperty("http://stack.linkeddata.org/ldis-schema/serviceUrl");

    public static final Property user = m_model
	    .createProperty("http://stack.linkeddata.org/ldis-schema/user");

    /**
     * <p>
     * Represents the agent responsible for analysis.
     * </p>
     */
    public static final Resource AnalysisService = m_model
	    .createResource("http://stack.linkeddata.org/ldis-schema/AnalysisService");

    /**
     * <p>
     * Represents the agent responsible for authoring.
     * </p>
     */
    public static final Resource AuthoringService = m_model
	    .createResource("http://stack.linkeddata.org/ldis-schema/AuthoringService");

    /**
     * <p>
     * Represents the agent responsible for storage.
     * </p>
     */
    public static final Resource CleaningService = m_model
	    .createResource("http://stack.linkeddata.org/ldis-schema/CleaningService");

    public static final Resource ComponentService = m_model
	    .createResource("http://stack.linkeddata.org/ldis-schema/ComponentService");

    public static final Resource EnrichmentService = m_model
	    .createResource("http://stack.linkeddata.org/ldis-schema/EnrichmentService");

    /**
     * <p>
     * Represents the agent responsible for exploration.
     * </p>
     */
    public static final Resource ExplorationService = m_model
	    .createResource("http://stack.linkeddata.org/ldis-schema/ExplorationService");

    /**
     * <p>
     * Represents the agent responsible for extraction.
     * </p>
     */
    public static final Resource ExtractionService = m_model
	    .createResource("http://stack.linkeddata.org/ldis-schema/ExtractionService");

    /**
     * <p>
     * Represents the agent responsible for interlinking.
     * </p>
     */
    public static final Resource InterlinkingService = m_model
	    .createResource("http://stack.linkeddata.org/ldis-schema/InterlinkingService");

    /**
     * <p>
     * Represents the agent responsible for quality analysis.
     * </p>
     */
    public static final Resource PublicationService = m_model
	    .createResource("http://stack.linkeddata.org/ldis-schema/PublicationService");

    /**
     * <p>
     * Represents the agent responsible for quality analysis.
     * </p>
     */
    public static final Resource QualityAnalysisService = m_model
	    .createResource("http://stack.linkeddata.org/ldis-schema/QualityAnalysisService");

    /**
     * <p>
     * Represents a query end point
     * </p>
     */
    public static final Resource QueryEndPointService = m_model
	    .createResource("http://stack.linkeddata.org/ldis-schema/QueryEndPointService");

    /**
     * <p>
     * Represents a Sparql query end point
     * </p>
     */
    public static final Resource SPARQLEndPointService = m_model
	    .createResource("http://stack.linkeddata.org/ldis-schema/SPARQLEndPointService");

    public static final Resource StackComponent = m_model
	    .createResource("http://stack.linkeddata.org/ldis-schema/StackComponent");

    /**
     * <p>
     * Represents the agent responsible for storage.
     * </p>
     */
    public static final Resource StorageService = m_model
	    .createResource("http://stack.linkeddata.org/ldis-schema/StorageService");

    /**
     * <p>
     * Represents the agent responsible for transformation.
     * </p>
     */
    public static final Resource TransformationService = m_model
	    .createResource("http://stack.linkeddata.org/ldis-schema/TransformationService");

}
