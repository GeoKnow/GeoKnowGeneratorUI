<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.linkeddata</groupId>
	<artifactId>geoknow-generator-ui</artifactId>
	<packaging>war</packaging>
	<version>1.0</version>
	<name>Vaadin Web Application</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<vaadin.version>7.1.0</vaadin.version>
		<vaadin.plugin.version>${vaadin.version}</vaadin.plugin.version>
		
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	    <apache-commons-io.version>2.1</apache-commons-io.version>
	    <apache-commons-lang.version>3.1</apache-commons-lang.version>
	    <httpclient.version>4.1.3</httpclient.version>
	    <httpcore.version>4.1.3</httpcore.version>
	    <jackson.version>1.9.2</jackson.version>
	    <virtuoso-sesame-driver.version>2.0</virtuoso-sesame-driver.version>
	    <virtuoso-jdbc-driver.version>3.62</virtuoso-jdbc-driver.version>
	</properties>
	
	<repositories>
		<repository>
			<id>vaadin-addons</id>
			<url>http://maven.vaadin.com/vaadin-addons</url>
		</repository>
		<repository>
			<id>vaadin-snapshots</id>
			<url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		 <repository>
		      <id>openRDF1</id>
		      <url>http://repo.aduna-software.org</url>
		    </repository>
		    <repository>
		      <id>openRDF2</id>
		      <url>http://repo.aduna-software.org/maven2</url>
		    </repository>
		    <repository>
		      <id>openRDF3</id>
		      <url>http://repo.aduna-software.org/maven2/releases</url>
		    </repository>
		    <repository>
		      <id>maven-general</id>
		      <url>http://repo2.maven.org/maven2/</url>
		    </repository>
		    <repository>
		      <id>Jena</id>
		      <url>http://openjena.org/repo</url>
		        </repository>
		        <repository>  
		   <id>maven-restlet</id>  
		   <name>Public online Restlet repository</name>  
		   <url>http://maven.restlet.org</url>  
		</repository>  
		    <!--
		    <repository>
		      <id>The Buzz Media Maven Repository</id>
		      <url>http://maven.thebuzzmedia.com</url>
		    </repository> 
		    -->
		<repository>
		        <id>sardine-google-svn-repo</id>
		        <snapshots> <enabled>true</enabled> </snapshots>
		        <name>Sardine maven repo at Google Code</name>
		        <url>http://sardine.googlecode.com/svn/maven/</url>
		     </repository>
		    <repository>
		      <id>Public Maven repo for Saxon 9</id>
		      <url>http://www2.ph.ed.ac.uk/maven2/</url>
		    </repository>
			  <repository>
			   <id>codehaus-snapshots</id>
			   <url>http://snapshots.repository.codehaus.org</url>
			  </repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>vaadin-snapshots</id>
			<url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
	
	<dependencyManagement>
	    <!-- For Sesame dependency one requires to import first the pom dependencies -->
	    <dependencies>
	      <dependency>
	        <groupId>org.openrdf.sesame</groupId>
	        <artifactId>sesame</artifactId>
	        <version>2.6.7</version>
	        <type>pom</type>
	        <scope>import</scope>
	      </dependency>
	      <dependency>
	        <groupId>org.openrdf.sesame</groupId>
	        <artifactId>sesame-model</artifactId>
	        <version>2.6.7</version>
	        <type>pom</type>
	        <scope>import</scope>
	      </dependency>
	      <dependency>
	        <groupId>org.openrdf.sesame</groupId>
	        <artifactId>sesame-query</artifactId>
	        <version>2.6.7</version>
	        <type>pom</type>
	        <scope>import</scope>
	      </dependency>
	      <dependency>
	        <groupId>org.openrdf.sesame</groupId>
	        <artifactId>sesame-queryalgebra-evaluation</artifactId>
	        <version>2.6.7</version>
	        <type>pom</type>
	        <scope>import</scope>
	      </dependency>
	      <dependency>
	        <groupId>org.openrdf.sesame</groupId>
	        <artifactId>sesame-repository</artifactId>
	        <version>2.6.7</version>
	        <type>pom</type>
	        <scope>import</scope>
	      </dependency>
	      <dependency>
	        <groupId>org.openrdf.sesame</groupId>
	        <artifactId>sesame-rio-api</artifactId>
	        <version>2.6.7</version>
	        <type>pom</type>
	        <scope>import</scope>
	      </dependency>
	      <dependency>
	        <groupId>org.openrdf.sesame</groupId>
	        <artifactId>sesame-rio-rdfxml</artifactId>
	        <version>2.6.7</version>
	        <type>pom</type>
	        <scope>import</scope>
	      </dependency>
	    </dependencies>
  	</dependencyManagement>
	
	<dependencies>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-server</artifactId>
			<version>${vaadin.version}</version>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-client-compiled</artifactId>
			<version>${vaadin.version}</version>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-client</artifactId>
			<version>${vaadin.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-themes</artifactId>
			<version>${vaadin.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.4</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
	      <groupId>org.slf4j</groupId>
	      <artifactId>slf4j-log4j12</artifactId>
	      <version>1.6.2</version>
	    </dependency>
	
	    <dependency>
	      <groupId>org.apache.httpcomponents</groupId>
	      <artifactId>httpcore</artifactId>
	      <version>4.2.4</version>
	    </dependency>
	    <dependency>
	      <groupId>org.apache.httpcomponents</groupId>
	      <artifactId>httpclient</artifactId>
	      <version>4.2.5</version>
	      <scope>compile</scope>
	    </dependency>
	      <dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1</version>
		  </dependency>
		  
	      <dependency>
		      <groupId>org.openrdf.sesame</groupId>
		      <artifactId>sesame-model</artifactId>
		      <version>2.6.7</version>
		    </dependency>
		    <dependency>
		      <groupId>org.openrdf.sesame</groupId>
		      <artifactId>sesame-query</artifactId>
		      <version>2.6.7</version>
		    </dependency>
		    <dependency>
		      <groupId>org.openrdf.sesame</groupId>
		      <artifactId>sesame-queryalgebra-evaluation</artifactId>
		      <version>2.6.7</version>
		    </dependency>
		    <dependency>
		      <groupId>org.openrdf.sesame</groupId>
		      <artifactId>sesame-repository-api</artifactId>
		      <version>2.6.7</version>
		    </dependency>
		    <dependency>
		      <groupId>org.openrdf.sesame</groupId>
		      <artifactId>sesame-queryparser-sparql</artifactId>
		      <version>2.6.7</version>
		    </dependency>
		    <dependency>
		      <groupId>org.openrdf.sesame</groupId>
		      <artifactId>sesame-rio-api</artifactId>
		      <version>2.6.7</version>
		    </dependency>
		    <dependency>
		      <groupId>org.openrdf.sesame</groupId>
		      <artifactId>sesame-rio-rdfxml</artifactId>
		      <version>2.6.7</version>
		    </dependency>
		    
		    <dependency>
			    <groupId>virtuoso.sesame2</groupId>
			    <artifactId>driver</artifactId>
			    <version>2.0</version>
			    <scope>compile</scope>
			 </dependency>
			 <dependency>
			    <groupId>virtuoso</groupId>
			    <artifactId>jdbc3</artifactId>
			   <version>3.62</version>
			    <scope>runtime</scope>
			 </dependency>
			 
			 <dependency>
		      <groupId>org.restlet.jee</groupId>
		      <artifactId>org.restlet</artifactId>
		      <version>LATEST</version>
		     </dependency>
		     
			<dependency>
		      <groupId>com.googlecode.sardine</groupId>
		      <artifactId>sardine</artifactId>
		      <version>284</version>
		    </dependency>
		    
			<dependency>
		        <groupId>xerces</groupId>
		        <artifactId>xercesImpl</artifactId>
		        <version>2.9.1</version>
		    </dependency>
		    
			<dependency>
		        <groupId>xml-resolver</groupId>
		        <artifactId>xml-resolver</artifactId>
		        <version>1.2</version>
		     </dependency>
	      
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<!-- As we are doing "inplace" GWT compilation, ensure the widgetset -->
			<!-- directory is cleaned properly -->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.4.1</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>src/main/webapp/VAADIN/widgetsets</directory>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-maven-plugin</artifactId>
				<version>${vaadin.plugin.version}</version>
				<configuration>
					<extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
					<!-- <runTarget>mobilemail</runTarget> -->
					<!-- We are doing "inplace" but into subdir VAADIN/widgetsets. This way compatible with Vaadin eclipse plugin. -->
					<webappDirectory>${basedir}/src/main/webapp/VAADIN/widgetsets
					</webappDirectory>
					<hostedWebapp>${basedir}/src/main/webapp/VAADIN/widgetsets
					</hostedWebapp>
					<noServer>true</noServer>
					<!-- Remove draftCompile when project is ready -->
					<draftCompile>false</draftCompile>
					<compileReport>true</compileReport>
					<style>OBF</style>
					<strict>true</strict>
					<runTarget>http://localhost:8080/</runTarget>
				</configuration>
				<executions>
					<execution>
						<configuration>
							<!-- if you don't specify any modules, the plugin will find them -->
							<!-- <modules> <module>com.vaadin.demo.mobilemail.gwt.ColorPickerWidgetSet</module> 
								</modules> -->
						</configuration>
						<goals>
							<goal>resources</goal>
							<goal>update-widgetset</goal>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>8.1.11.v20130520</version>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.vaadin</groupId>
										<artifactId>
											vaadin-maven-plugin
										</artifactId>
										<versionRange>
											[7.1.0,)
										</versionRange>
										<goals>
											<goal>resources</goal>
											<goal>update-widgetset</goal>
											<goal>compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<profiles>
		<profile>
			<id>deb-pkg</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<configuration>
							<tasks>
								<echo
									message="Creating deb package">
								</echo>
								<exec
									dir="${basedir}/src/deb-package"
									executable="${basedir}/src/deb-package/build_debpkg.sh"
									failonerror="true">
								</exec>
							</tasks>
						</configuration>
						<executions>
							<execution>
								<id>deb-pkg</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
