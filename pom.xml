<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>eu.geoknow</groupId>
	<artifactId>geoknow-generator-ui</artifactId>
	<packaging>war</packaging>
	<version>1.2.0</version>
	<name>GeoKnow Generator</name>

	<properties>
		<endorsed.dir>${project.build.directory}/endorsed</endorsed.dir>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<jersey.version>2.12</jersey.version>
	</properties>

	<repositories>
		<repository>
			<id>ldstack</id>
			<url>http://mvn.linkeddata.org/content/groups/linkeddata.org/</url>
		</repository>
	</repositories>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.glassfish.jersey</groupId>
				<artifactId>jersey-bom</artifactId>
				<version>${jersey.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>

    <dependency>
        <groupId>javax.el</groupId>
        <artifactId>javax.el-api</artifactId>
        <version>2.2.4</version>
        <scope>provided</scope>
    </dependency>

		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
			<version>1.9.13</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.13</version>
		</dependency>
		<dependency>
			<groupId>org.apache.jena</groupId>
			<artifactId>apache-jena</artifactId>
			<type>pom</type>
			<version>2.10.1</version>
		</dependency>
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4.7</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.2.4</version>
		</dependency>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.2.11</version>
		</dependency>

		<!-- <dependency> <groupId>commons-httpclient</groupId> <artifactId>commons-httpclient</artifactId> 
			<version>3.1</version> </dependency> -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.3.5</version>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpmime</artifactId>
			<version>4.3.5</version>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpcore</artifactId>
			<version>4.3.2</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.3.2</version>
		</dependency>

		<!-- for digest authentication -->
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.9</version>
		</dependency>

		<!-- Logger -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.16</version>
		</dependency>

		<!-- Javax web services with jersey -->
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.jaxrs</groupId>
			<artifactId>jackson-jaxrs-json-provider</artifactId>
			<version>2.3.2</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-jackson</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.ext</groupId>
			<artifactId>jersey-bean-validation</artifactId>
		</dependency>

		<!-- for testing -->
		<dependency>
			<groupId>com.jayway.restassured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>2.3.4</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<finalName>generator</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<compilerArguments>
						<endorseddirs>${endorsed.dir}</endorseddirs>
					</compilerArguments>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<!-- integration test run: mvn verify after deploying the war in tomcat -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.12</version>
				<executions>
					<execution>
						<id>integration-test</id>
						<phase>integration-test</phase>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Maven Tomcat Plugin mvn tomcat7:deploy|redeploy -->
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<server>localhost</server>
					<url>${tomcat.deploy.url}</url>
					<path>/${project.build.finalName}</path>
					<update>true</update>
				</configuration>
			</plugin>

			<!-- For creating the debian package -->
			<plugin>
			  <artifactId>jdeb</artifactId>
			  <groupId>org.vafer</groupId>
			  <version>1.3</version>
			  <executions>
			    <execution>
			      <phase>package</phase>
			      <goals>
			        <goal>jdeb</goal>
			      </goals>
			      <configuration>
			      	
			      	<deb>${project.build.directory}/${project.artifactId}_${project.version}_all.deb</deb>
			      	<changesOut>${project.build.directory}/${project.artifactId}_${project.version}_all.changes</changesOut>

				<dataSet>
					<data>
						<type>template</type>
						<paths>
							<path>/jobs</path>
       						</paths>
						<mapper>
                                    			<type>perm</type>
				 			<prefix>/var/generator</prefix>					
                                    			<user>tomcat7</user>
                                    			<group>tomcat7</group>
                                  		</mapper>
    					</data> 
                                        <data>
				          <src>${project.build.directory}/${project.build.finalName}.war</src>
				          <type>file</type>
				          <mapper>
				            <type>perm</type>
				            <prefix>/var/lib/tomcat7/webapps</prefix>
				          </mapper>
				        </data>
				      </dataSet>
				      
				      <changesOut></changesOut>
			    	</configuration>
			 		</execution>
				</executions>
			</plugin>

			<!-- To generate JAVA classes of the ontology models
			I tried to use this plugin to automatoicalluy create java clasess, but I didnt
			succeed in reading the configuration file 
			<plugin>
				<groupId>org.apache.jena</groupId>
				<artifactId>jena-maven-tools</artifactId>
				<version>0.8</version>
				<configuration>
					<includes>
						<include>src/main/vocabs/framework-ontology_0.1.2.ttl</include>
						<include>src/main/vocabs/ldsi-schema_0.1.1.ttl</include>
						<include>src/main/vocabs/sparql-service-description.ttl</include>
					</includes>
					<fileOptions>
						<source>
							<input>src/main/vocabs/framework-ontology_0.1.2.ttl</input>
							<class-name>LDIWO</class-name>
							<config-file>src/main/vocabs/schemagen-config.xml</config-file>
							<output>src/main/java/com/ontos/ldiw/vocabulary</output>
						</source>
						<source>
							<input>src/main/vocabs/ldsi-schema_0.1.1.ttl</input>
              <class-name>LDIS</class-name>
              <package-name>com.ontos.ldiw.vocabulary</package-name>
              <output>src/main/java/com/ontos/ldiw/vocabulary</output>
              <ontology>true</ontology>
						</source>
						<source>
              <input>src/main/vocabs/sparql-service-description.ttl</input>
              <class-name>SD</class-name>
              <package-name>com.ontos.ldiw.vocabulary</package-name>
              <output>src/main/java/com/ontos/ldiw/vocabulary</output>
            </source>
					</fileOptions>
				</configuration>
				<executions>
					<execution>
						<id>schemagen</id>
						<goals>
							<goal>translate</goal>
						</goals>
					</execution>
				</executions>
			</plugin> -->
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>deb-pkg</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<configuration>
							<tasks>
								<echo message="Creating debian package">
								</echo>
								<exec dir="${basedir}/deb-package" executable="${basedir}/deb-package/build_debpkg.sh"
									failonerror="true">
								</exec>
							</tasks>
						</configuration>
						<executions>
							<execution>
								<id>deb-pkg</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
